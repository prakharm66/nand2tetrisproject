// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way (sel=address[3..5],a=l1,b=l2,c=l3,d=l4,e=l5,f=l6,g=l7,h=l8,in=load);
    RAM8 (in=in,load=l1, address=address[0..2],out=oram1);
    RAM8 (in=in,load=l2, address=address[0..2],out=oram2);
    RAM8 (in=in,load=l3, address=address[0..2],out=oram3);
    RAM8 (in=in,load=l4, address=address[0..2],out=oram4);
    RAM8 (in=in,load=l5, address=address[0..2],out=oram5);
    RAM8 (in=in,load=l6, address=address[0..2],out=oram6);
    RAM8 (in=in,load=l7, address=address[0..2],out=oram7);
    RAM8 (in=in,load=l8, address=address[0..2],out=oram8);
    Mux8Way16 (a=oram1,b=oram2,c=oram3,d=oram4,e=oram5,f=oram6,g=oram7,h=oram8,sel=address[3..5],out=out);
}